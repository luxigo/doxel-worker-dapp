#!/bin/bash

usage() {
cat << EOF
NAME
       $(basename $0) - update doxel job progress

SYNOPSIS
       $(basename $0) [OPTION]... URL

DESCRIPTION
       Update a doxel job progress. Returns the updated job json.
       The job progress timestamp will be updated the current server time,
       The job progress details will be set to the value of -d, if specified.

       URL
             the api endpoint eg "http://localhost:3001/api"

       -h, --help

       -a, --authorization
             loopbackjs access token id

       -n, --no-check-certificate

       -j, --job-id
             the job id (mandatory)

       -d, --details
             progress details (optional)

EOF
exit 1

}

# parse command line options
if ! options=$(getopt -o ha:nj:d: -l help,authorization:,no-check-certificate,job-id,details -- "$@")
then
    # something went wrong, getopt will put out an error message for us
    exit 1
fi

eval set -- "$options"

while [ $# -gt 0 ] ; do
    case $1 in
    -h|--help) usage ;;
    -a|--authorization) AUTHORIZATION=$2 ; shift ;;
    -n|--no-check-certificate) NOCHECKCERTIFICATE=--no-check-certificate ;;
    -j|--job-id) JOBID="$2" ; shift ;;
    -d|--details) DETAILS="$2" ; shift ;;
    (--) shift; break;;
    (-*) echo "$(basename $0): error - unrecognized option $1" 1>&2; exit 1;;
    (*) break;;
    esac
    shift
done

[ $# -ne 1 ] && usage

URL=$1/jobs/progress/$JOBID
[ -n "$DETAILS" ] && URL=$URL/$DETAILS

wget \
  -q \
  --header="authorization: $AUTHORIZATION" \
  $NOCHECKCERTIFICATE \
  $URL \
  -O -

ERR=$?

echo

ERRMSG=(\
  'Ok' \
  'Generic error code' \
  'Parse error' \
  'File I/O error' \
  'Network failure' \
  'SSL verification failure' \
  'Username/password authentication failure' \
  'Protocol errors' \
  'Server issued an error response'
)

[ $ERR -ne 0 ] && echo "$(basename 0): ${ERRMSG[$ERR]} ($ERR)" >&2

exit $ERR
