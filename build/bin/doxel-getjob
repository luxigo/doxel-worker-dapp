#!/bin/bash

usage() {
cat << EOF
NAME
       $(basename $0) - request a segment ID to process

SYNOPSIS
       $(basename $0) [OPTION]... URL

DESCRIPTION
       Request a segment to process. Returns a job record json.

       When no segment is secified, the first segment marked
       as 'queued' is selected.

       The same job record will be returned until the
       job as been marked as 'completed'.

       URL
             the api endpoint eg "http://localhost:3001/api"

       -h, --help

       -a, --authorization
             loopbackjs access token id

       -n, --no-check-certificate

       -s, --segment
             optional: segment id or timestamp

EOF
exit 1

}

# parse command line options
if ! options=$(getopt -o ha:ns: -l help,authorization:,no-check-certificate,segment -- "$@")
then
    # something went wrong, getopt will put out an error message for us
    exit 1
fi

eval set -- "$options"

while [ $# -gt 0 ] ; do
    case $1 in
    -h|--help) usage ;;
    -a|--authorization) AUTHORIZATION=$2 ; shift ;;
    -n|--no-check-certificate) NOCHECKCERTIFICATE=--no-check-certificate ;;
    -s|--segment) SEGMENT=$2 ; shift ;;
    (--) shift; break;;
    (-*) echo "$(basename $0): error - unrecognized option $1" 1>&2; exit 1;;
    (*) break;;
    esac
    shift
done

[ $# -ne 1 ] && usage

URL=$1/jobs/get

[ ${#SEGMENT} -ne 0 ] && URL="$URL?s=$SEGMENT"

wget \
  -q \
  --header="authorization: $AUTHORIZATION" \
  $NOCHECKCERTIFICATE \
  $URL \
  -O -

ERR=$?

echo

ERRMSG=(\
  'Ok' \
  'Generic error code' \
  'Parse error' \
  'File I/O error' \
  'Network failure' \
  'SSL verification failure' \
  'Username/password authentication failure' \
  'Protocol errors' \
  'Server issued an error response'
)

[ $ERR -ne 0 ] && echo "$(basename 0): ${ERRMSG[$ERR]} ($ERR)" >&2

exit $ERR
